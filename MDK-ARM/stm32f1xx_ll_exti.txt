; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -otemplate\stm32f1xx_ll_exti.o --asm_dir=./ --list_dir=--list --depend=template\stm32f1xx_ll_exti.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_Template -ID:\Keil_v5\Pack\ARM\CMSIS\5.7.0\CMSIS\Core\Include -ID:\Keil_v5\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=533 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DUSE_FULL_LL_DRIVER -DUSE_HAL_DRIVER -DSTM32F103xB --signed_chars --omf_browse=template\stm32f1xx_ll_exti.crf ../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_exti.c]
                          THUMB

                          AREA ||i.LL_EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  LL_EXTI_DeInit PROC
;;;80       */
;;;81     uint32_t LL_EXTI_DeInit(void)
000000  2000              MOVS     r0,#0
;;;82     {
;;;83       /* Interrupt mask register set to default reset values */
;;;84       LL_EXTI_WriteReg(IMR,   0x00000000U);
000002  4907              LDR      r1,|L1.32|
000004  6008              STR      r0,[r1,#0]
;;;85       /* Event mask register set to default reset values */
;;;86       LL_EXTI_WriteReg(EMR,   0x00000000U);
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;87       /* Rising Trigger selection register set to default reset values */
;;;88       LL_EXTI_WriteReg(RTSR,  0x00000000U);
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;89       /* Falling Trigger selection register set to default reset values */
;;;90       LL_EXTI_WriteReg(FTSR,  0x00000000U);
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;91       /* Software interrupt event register set to default reset values */
;;;92       LL_EXTI_WriteReg(SWIER, 0x00000000U);
000012  1d09              ADDS     r1,r1,#4
000014  6008              STR      r0,[r1,#0]
;;;93       /* Pending register clear */
;;;94       LL_EXTI_WriteReg(PR,    0x000FFFFFU);
000016  4803              LDR      r0,|L1.36|
000018  1d09              ADDS     r1,r1,#4
00001a  6008              STR      r0,[r1,#0]
;;;95     
;;;96       return SUCCESS;
00001c  2000              MOVS     r0,#0
;;;97     }
00001e  4770              BX       lr
;;;98     
                          ENDP

                  |L1.32|
                          DCD      0x40010400
                  |L1.36|
                          DCD      0x000fffff

                          AREA ||i.LL_EXTI_DisableEvent_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_DisableEvent_0_31 PROC
;;;415      */
;;;416    __STATIC_INLINE void LL_EXTI_DisableEvent_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L2.12|
;;;417    {
;;;418      CLEAR_BIT(EXTI->EMR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4381              BICS     r1,r1,r0
000006  4a01              LDR      r2,|L2.12|
000008  6011              STR      r1,[r2,#0]
;;;419    }
00000a  4770              BX       lr
;;;420    
                          ENDP

                  |L2.12|
                          DCD      0x40010404

                          AREA ||i.LL_EXTI_DisableIT_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_DisableIT_0_31 PROC
;;;301      */
;;;302    __STATIC_INLINE void LL_EXTI_DisableIT_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L3.12|
;;;303    {
;;;304      CLEAR_BIT(EXTI->IMR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4381              BICS     r1,r1,r0
000006  4a01              LDR      r2,|L3.12|
000008  6011              STR      r1,[r2,#0]
;;;305    }
00000a  4770              BX       lr
;;;306    
                          ENDP

                  |L3.12|
                          DCD      0x40010400

                          AREA ||i.LL_EXTI_EnableEvent_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_EnableEvent_0_31 PROC
;;;380      */
;;;381    __STATIC_INLINE void LL_EXTI_EnableEvent_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L4.12|
;;;382    {
;;;383      SET_BIT(EXTI->EMR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L4.12|
000008  6011              STR      r1,[r2,#0]
;;;384    
;;;385    }
00000a  4770              BX       lr
;;;386    
                          ENDP

                  |L4.12|
                          DCD      0x40010404

                          AREA ||i.LL_EXTI_EnableFallingTrig_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_EnableFallingTrig_0_31 PROC
;;;617      */
;;;618    __STATIC_INLINE void LL_EXTI_EnableFallingTrig_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L5.12|
;;;619    {
;;;620      SET_BIT(EXTI->FTSR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L5.12|
000008  6011              STR      r1,[r2,#0]
;;;621    }
00000a  4770              BX       lr
;;;622    
                          ENDP

                  |L5.12|
                          DCD      0x4001040c

                          AREA ||i.LL_EXTI_EnableIT_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_EnableIT_0_31 PROC
;;;265      */
;;;266    __STATIC_INLINE void LL_EXTI_EnableIT_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L6.12|
;;;267    {
;;;268      SET_BIT(EXTI->IMR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L6.12|
000008  6011              STR      r1,[r2,#0]
;;;269    }
00000a  4770              BX       lr
;;;270    
                          ENDP

                  |L6.12|
                          DCD      0x40010400

                          AREA ||i.LL_EXTI_EnableRisingTrig_0_31||, CODE, READONLY, ALIGN=2

                  LL_EXTI_EnableRisingTrig_0_31 PROC
;;;497      */
;;;498    __STATIC_INLINE void LL_EXTI_EnableRisingTrig_0_31(uint32_t ExtiLine)
000000  4902              LDR      r1,|L7.12|
;;;499    {
;;;500      SET_BIT(EXTI->RTSR, ExtiLine);
000002  6809              LDR      r1,[r1,#0]
000004  4301              ORRS     r1,r1,r0
000006  4a01              LDR      r2,|L7.12|
000008  6011              STR      r1,[r2,#0]
;;;501    
;;;502    }
00000a  4770              BX       lr
;;;503    
                          ENDP

                  |L7.12|
                          DCD      0x40010408

                          AREA ||i.LL_EXTI_Init||, CODE, READONLY, ALIGN=2

                  LL_EXTI_Init PROC
;;;105      */
;;;106    uint32_t LL_EXTI_Init(LL_EXTI_InitTypeDef *EXTI_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;107    {
000002  4604              MOV      r4,r0
;;;108      ErrorStatus status = SUCCESS;
000004  2500              MOVS     r5,#0
;;;109      /* Check the parameters */
;;;110      assert_param(IS_LL_EXTI_LINE_0_31(EXTI_InitStruct->Line_0_31));
000006  6820              LDR      r0,[r4,#0]
000008  f36f0012          BFC      r0,#0,#19
00000c  b900              CBNZ     r0,|L8.16|
00000e  e003              B        |L8.24|
                  |L8.16|
000010  216e              MOVS     r1,#0x6e
000012  a041              ADR      r0,|L8.280|
000014  f7fffffe          BL       assert_failed
                  |L8.24|
;;;111      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->LineCommand));
000018  7920              LDRB     r0,[r4,#4]
00001a  b110              CBZ      r0,|L8.34|
00001c  7920              LDRB     r0,[r4,#4]
00001e  2801              CMP      r0,#1
000020  d100              BNE      |L8.36|
                  |L8.34|
000022  e003              B        |L8.44|
                  |L8.36|
000024  216f              MOVS     r1,#0x6f
000026  a03c              ADR      r0,|L8.280|
000028  f7fffffe          BL       assert_failed
                  |L8.44|
;;;112      assert_param(IS_LL_EXTI_MODE(EXTI_InitStruct->Mode));
00002c  7960              LDRB     r0,[r4,#5]
00002e  b128              CBZ      r0,|L8.60|
000030  7960              LDRB     r0,[r4,#5]
000032  2801              CMP      r0,#1
000034  d002              BEQ      |L8.60|
000036  7960              LDRB     r0,[r4,#5]
000038  2802              CMP      r0,#2
00003a  d100              BNE      |L8.62|
                  |L8.60|
00003c  e003              B        |L8.70|
                  |L8.62|
00003e  2170              MOVS     r1,#0x70
000040  a035              ADR      r0,|L8.280|
000042  f7fffffe          BL       assert_failed
                  |L8.70|
;;;113    
;;;114      /* ENABLE LineCommand */
;;;115      if (EXTI_InitStruct->LineCommand != DISABLE)
000046  7920              LDRB     r0,[r4,#4]
000048  2800              CMP      r0,#0
00004a  d05d              BEQ      |L8.264|
;;;116      {
;;;117        assert_param(IS_LL_EXTI_TRIGGER(EXTI_InitStruct->Trigger));
00004c  79a0              LDRB     r0,[r4,#6]
00004e  b140              CBZ      r0,|L8.98|
000050  79a0              LDRB     r0,[r4,#6]
000052  2801              CMP      r0,#1
000054  d005              BEQ      |L8.98|
000056  79a0              LDRB     r0,[r4,#6]
000058  2802              CMP      r0,#2
00005a  d002              BEQ      |L8.98|
00005c  79a0              LDRB     r0,[r4,#6]
00005e  2803              CMP      r0,#3
000060  d100              BNE      |L8.100|
                  |L8.98|
000062  e003              B        |L8.108|
                  |L8.100|
000064  2175              MOVS     r1,#0x75
000066  a02c              ADR      r0,|L8.280|
000068  f7fffffe          BL       assert_failed
                  |L8.108|
;;;118    
;;;119        /* Configure EXTI Lines in range from 0 to 31 */
;;;120        if (EXTI_InitStruct->Line_0_31 != LL_EXTI_LINE_NONE)
00006c  6820              LDR      r0,[r4,#0]
00006e  2800              CMP      r0,#0
000070  d050              BEQ      |L8.276|
;;;121        {
;;;122          switch (EXTI_InitStruct->Mode)
000072  7960              LDRB     r0,[r4,#5]
000074  b120              CBZ      r0,|L8.128|
000076  2801              CMP      r0,#1
000078  d009              BEQ      |L8.142|
00007a  2802              CMP      r0,#2
00007c  d115              BNE      |L8.170|
00007e  e00d              B        |L8.156|
                  |L8.128|
;;;123          {
;;;124            case LL_EXTI_MODE_IT:
;;;125              /* First Disable Event on provided Lines */
;;;126              LL_EXTI_DisableEvent_0_31(EXTI_InitStruct->Line_0_31);
000080  6820              LDR      r0,[r4,#0]
000082  f7fffffe          BL       LL_EXTI_DisableEvent_0_31
;;;127              /* Then Enable IT on provided Lines */
;;;128              LL_EXTI_EnableIT_0_31(EXTI_InitStruct->Line_0_31);
000086  6820              LDR      r0,[r4,#0]
000088  f7fffffe          BL       LL_EXTI_EnableIT_0_31
;;;129              break;
00008c  e00f              B        |L8.174|
                  |L8.142|
;;;130            case LL_EXTI_MODE_EVENT:
;;;131              /* First Disable IT on provided Lines */
;;;132              LL_EXTI_DisableIT_0_31(EXTI_InitStruct->Line_0_31);
00008e  6820              LDR      r0,[r4,#0]
000090  f7fffffe          BL       LL_EXTI_DisableIT_0_31
;;;133              /* Then Enable Event on provided Lines */
;;;134              LL_EXTI_EnableEvent_0_31(EXTI_InitStruct->Line_0_31);
000094  6820              LDR      r0,[r4,#0]
000096  f7fffffe          BL       LL_EXTI_EnableEvent_0_31
;;;135              break;
00009a  e008              B        |L8.174|
                  |L8.156|
;;;136            case LL_EXTI_MODE_IT_EVENT:
;;;137              /* Directly Enable IT & Event on provided Lines */
;;;138              LL_EXTI_EnableIT_0_31(EXTI_InitStruct->Line_0_31);
00009c  6820              LDR      r0,[r4,#0]
00009e  f7fffffe          BL       LL_EXTI_EnableIT_0_31
;;;139              LL_EXTI_EnableEvent_0_31(EXTI_InitStruct->Line_0_31);
0000a2  6820              LDR      r0,[r4,#0]
0000a4  f7fffffe          BL       LL_EXTI_EnableEvent_0_31
;;;140              break;
0000a8  e001              B        |L8.174|
                  |L8.170|
;;;141            default:
;;;142              status = ERROR;
0000aa  2501              MOVS     r5,#1
;;;143              break;
0000ac  bf00              NOP      
                  |L8.174|
0000ae  bf00              NOP                            ;129
;;;144          }
;;;145          if (EXTI_InitStruct->Trigger != LL_EXTI_TRIGGER_NONE)
0000b0  79a0              LDRB     r0,[r4,#6]
0000b2  b340              CBZ      r0,|L8.262|
;;;146          {
;;;147            switch (EXTI_InitStruct->Trigger)
0000b4  79a0              LDRB     r0,[r4,#6]
0000b6  2801              CMP      r0,#1
0000b8  d004              BEQ      |L8.196|
0000ba  2802              CMP      r0,#2
0000bc  d00d              BEQ      |L8.218|
0000be  2803              CMP      r0,#3
0000c0  d11f              BNE      |L8.258|
0000c2  e017              B        |L8.244|
                  |L8.196|
;;;148            {
;;;149              case LL_EXTI_TRIGGER_RISING:
;;;150                /* First Disable Falling Trigger on provided Lines */
;;;151                LL_EXTI_DisableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000c4  6820              LDR      r0,[r4,#0]
0000c6  4922              LDR      r1,|L8.336|
0000c8  6809              LDR      r1,[r1,#0]
0000ca  4381              BICS     r1,r1,r0
0000cc  4a20              LDR      r2,|L8.336|
0000ce  6011              STR      r1,[r2,#0]
0000d0  bf00              NOP      
;;;152                /* Then Enable Rising Trigger on provided Lines */
;;;153                LL_EXTI_EnableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000d2  6820              LDR      r0,[r4,#0]
0000d4  f7fffffe          BL       LL_EXTI_EnableRisingTrig_0_31
;;;154                break;
0000d8  e015              B        |L8.262|
                  |L8.218|
;;;155              case LL_EXTI_TRIGGER_FALLING:
;;;156                /* First Disable Rising Trigger on provided Lines */
;;;157                LL_EXTI_DisableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000da  6820              LDR      r0,[r4,#0]
0000dc  491c              LDR      r1,|L8.336|
0000de  1f09              SUBS     r1,r1,#4
0000e0  6809              LDR      r1,[r1,#0]
0000e2  4381              BICS     r1,r1,r0
0000e4  4a1a              LDR      r2,|L8.336|
0000e6  1f12              SUBS     r2,r2,#4
0000e8  6011              STR      r1,[r2,#0]
0000ea  bf00              NOP      
;;;158                /* Then Enable Falling Trigger on provided Lines */
;;;159                LL_EXTI_EnableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000ec  6820              LDR      r0,[r4,#0]
0000ee  f7fffffe          BL       LL_EXTI_EnableFallingTrig_0_31
;;;160                break;
0000f2  e008              B        |L8.262|
                  |L8.244|
;;;161              case LL_EXTI_TRIGGER_RISING_FALLING:
;;;162                LL_EXTI_EnableRisingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000f4  6820              LDR      r0,[r4,#0]
0000f6  f7fffffe          BL       LL_EXTI_EnableRisingTrig_0_31
;;;163                LL_EXTI_EnableFallingTrig_0_31(EXTI_InitStruct->Line_0_31);
0000fa  6820              LDR      r0,[r4,#0]
0000fc  f7fffffe          BL       LL_EXTI_EnableFallingTrig_0_31
;;;164                break;
000100  e001              B        |L8.262|
                  |L8.258|
;;;165              default:
;;;166                status = ERROR;
000102  2501              MOVS     r5,#1
;;;167                break;
000104  bf00              NOP      
                  |L8.262|
000106  e005              B        |L8.276|
                  |L8.264|
;;;168            }
;;;169          }
;;;170        }
;;;171      }
;;;172      /* DISABLE LineCommand */
;;;173      else
;;;174      {
;;;175        /* De-configure EXTI Lines in range from 0 to 31 */
;;;176        LL_EXTI_DisableIT_0_31(EXTI_InitStruct->Line_0_31);
000108  6820              LDR      r0,[r4,#0]
00010a  f7fffffe          BL       LL_EXTI_DisableIT_0_31
;;;177        LL_EXTI_DisableEvent_0_31(EXTI_InitStruct->Line_0_31);
00010e  6820              LDR      r0,[r4,#0]
000110  f7fffffe          BL       LL_EXTI_DisableEvent_0_31
                  |L8.276|
;;;178      }
;;;179      return status;
000114  4628              MOV      r0,r5
;;;180    }
000116  bd70              POP      {r4-r6,pc}
;;;181    
                          ENDP

                  |L8.280|
000118  2e2e2f44          DCB      "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_exti.c"
00011c  72697665
000120  72732f53
000124  544d3332
000128  46317878
00012c  5f48414c
000130  5f447269
000134  7665722f
000138  5372632f
00013c  73746d33
000140  32663178
000144  785f6c6c
000148  5f657874
00014c  692e63  
00014f  00                DCB      0
                  |L8.336|
                          DCD      0x4001040c

                          AREA ||i.LL_EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  LL_EXTI_StructInit PROC
;;;186      */
;;;187    void LL_EXTI_StructInit(LL_EXTI_InitTypeDef *EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;188    {
;;;189      EXTI_InitStruct->Line_0_31      = LL_EXTI_LINE_NONE;
000002  6001              STR      r1,[r0,#0]
;;;190      EXTI_InitStruct->LineCommand    = DISABLE;
000004  7101              STRB     r1,[r0,#4]
;;;191      EXTI_InitStruct->Mode           = LL_EXTI_MODE_IT;
000006  7141              STRB     r1,[r0,#5]
;;;192      EXTI_InitStruct->Trigger        = LL_EXTI_TRIGGER_FALLING;
000008  2102              MOVS     r1,#2
00000a  7181              STRB     r1,[r0,#6]
;;;193    }
00000c  4770              BX       lr
;;;194    
                          ENDP


;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_exti.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_ll_exti_c_901bf5d4____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f1xx_ll_exti_c_901bf5d4____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_ll_exti_c_901bf5d4____REVSH|
#line 478
|__asm___19_stm32f1xx_ll_exti_c_901bf5d4____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_ll_exti_c_901bf5d4____RRX|
#line 665
|__asm___19_stm32f1xx_ll_exti_c_901bf5d4____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
