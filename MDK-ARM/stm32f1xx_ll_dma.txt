; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -otemplate\stm32f1xx_ll_dma.o --asm_dir=./ --list_dir=--list --depend=template\stm32f1xx_ll_dma.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_Template -ID:\Keil_v5\Pack\ARM\CMSIS\5.7.0\CMSIS\Core\Include -ID:\Keil_v5\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=533 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DUSE_FULL_LL_DRIVER -DUSE_HAL_DRIVER -DSTM32F103xB --signed_chars --omf_browse=template\stm32f1xx_ll_dma.crf ../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_dma.c]
                          THUMB

                          AREA ||i.LL_DMA_DeInit||, CODE, READONLY, ALIGN=2

                  LL_DMA_DeInit PROC
;;;129      */
;;;130    uint32_t LL_DMA_DeInit(DMA_TypeDef *DMAx, uint32_t Channel)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;131    {
000004  4605              MOV      r5,r0
000006  460c              MOV      r4,r1
;;;132      DMA_Channel_TypeDef *tmp = (DMA_Channel_TypeDef *)DMA1_Channel1;
000008  4e49              LDR      r6,|L1.304|
;;;133      ErrorStatus status = SUCCESS;
00000a  2700              MOVS     r7,#0
;;;134    
;;;135      /* Check the DMA Instance DMAx and Channel parameters*/
;;;136      assert_param(IS_LL_DMA_ALL_CHANNEL_INSTANCE(DMAx, Channel));
00000c  4848              LDR      r0,|L1.304|
00000e  3808              SUBS     r0,r0,#8
000010  4285              CMP      r5,r0
000012  d10e              BNE      |L1.50|
000014  2c01              CMP      r4,#1
000016  d00b              BEQ      |L1.48|
000018  2c02              CMP      r4,#2
00001a  d009              BEQ      |L1.48|
00001c  2c03              CMP      r4,#3
00001e  d007              BEQ      |L1.48|
000020  2c04              CMP      r4,#4
000022  d005              BEQ      |L1.48|
000024  2c05              CMP      r4,#5
000026  d003              BEQ      |L1.48|
000028  2c06              CMP      r4,#6
00002a  d001              BEQ      |L1.48|
00002c  2c07              CMP      r4,#7
00002e  d100              BNE      |L1.50|
                  |L1.48|
000030  e003              B        |L1.58|
                  |L1.50|
000032  2188              MOVS     r1,#0x88
000034  a03f              ADR      r0,|L1.308|
000036  f7fffffe          BL       assert_failed
                  |L1.58|
;;;137    
;;;138      tmp = (DMA_Channel_TypeDef *)(__LL_DMA_GET_CHANNEL_INSTANCE(DMAx, Channel));
00003a  483d              LDR      r0,|L1.304|
00003c  3808              SUBS     r0,r0,#8
00003e  4285              CMP      r5,r0
000040  d103              BNE      |L1.74|
000042  2c01              CMP      r4,#1
000044  d101              BNE      |L1.74|
000046  483a              LDR      r0,|L1.304|
000048  e02e              B        |L1.168|
                  |L1.74|
00004a  4839              LDR      r0,|L1.304|
00004c  3808              SUBS     r0,r0,#8
00004e  4285              CMP      r5,r0
000050  d104              BNE      |L1.92|
000052  2c02              CMP      r4,#2
000054  d102              BNE      |L1.92|
000056  4836              LDR      r0,|L1.304|
000058  3014              ADDS     r0,r0,#0x14
00005a  e025              B        |L1.168|
                  |L1.92|
00005c  4834              LDR      r0,|L1.304|
00005e  3808              SUBS     r0,r0,#8
000060  4285              CMP      r5,r0
000062  d104              BNE      |L1.110|
000064  2c03              CMP      r4,#3
000066  d102              BNE      |L1.110|
000068  4831              LDR      r0,|L1.304|
00006a  3028              ADDS     r0,r0,#0x28
00006c  e01c              B        |L1.168|
                  |L1.110|
00006e  4830              LDR      r0,|L1.304|
000070  3808              SUBS     r0,r0,#8
000072  4285              CMP      r5,r0
000074  d104              BNE      |L1.128|
000076  2c04              CMP      r4,#4
000078  d102              BNE      |L1.128|
00007a  482d              LDR      r0,|L1.304|
00007c  303c              ADDS     r0,r0,#0x3c
00007e  e013              B        |L1.168|
                  |L1.128|
000080  482b              LDR      r0,|L1.304|
000082  3808              SUBS     r0,r0,#8
000084  4285              CMP      r5,r0
000086  d104              BNE      |L1.146|
000088  2c05              CMP      r4,#5
00008a  d102              BNE      |L1.146|
00008c  4828              LDR      r0,|L1.304|
00008e  3050              ADDS     r0,r0,#0x50
000090  e00a              B        |L1.168|
                  |L1.146|
000092  4827              LDR      r0,|L1.304|
000094  3808              SUBS     r0,r0,#8
000096  4285              CMP      r5,r0
000098  d104              BNE      |L1.164|
00009a  2c06              CMP      r4,#6
00009c  d102              BNE      |L1.164|
00009e  4824              LDR      r0,|L1.304|
0000a0  3064              ADDS     r0,r0,#0x64
0000a2  e001              B        |L1.168|
                  |L1.164|
0000a4  4822              LDR      r0,|L1.304|
0000a6  3078              ADDS     r0,r0,#0x78
                  |L1.168|
0000a8  4606              MOV      r6,r0
;;;139    
;;;140      /* Disable the selected DMAx_Channely */
;;;141      CLEAR_BIT(tmp->CCR, DMA_CCR_EN);
0000aa  6830              LDR      r0,[r6,#0]
0000ac  f0200001          BIC      r0,r0,#1
0000b0  6030              STR      r0,[r6,#0]
;;;142    
;;;143      /* Reset DMAx_Channely control register */
;;;144      LL_DMA_WriteReg(tmp, CCR, 0U);
0000b2  2000              MOVS     r0,#0
0000b4  6030              STR      r0,[r6,#0]
;;;145    
;;;146      /* Reset DMAx_Channely remaining bytes register */
;;;147      LL_DMA_WriteReg(tmp, CNDTR, 0U);
0000b6  6070              STR      r0,[r6,#4]
;;;148    
;;;149      /* Reset DMAx_Channely peripheral address register */
;;;150      LL_DMA_WriteReg(tmp, CPAR, 0U);
0000b8  60b0              STR      r0,[r6,#8]
;;;151    
;;;152      /* Reset DMAx_Channely memory address register */
;;;153      LL_DMA_WriteReg(tmp, CMAR, 0U);
0000ba  60f0              STR      r0,[r6,#0xc]
;;;154    
;;;155      if (Channel == LL_DMA_CHANNEL_1)
0000bc  2c01              CMP      r4,#1
0000be  d104              BNE      |L1.202|
;;;156      {
;;;157        /* Reset interrupt pending bits for DMAx Channel1 */
;;;158        LL_DMA_ClearFlag_GI1(DMAx);
0000c0  bf00              NOP      
0000c2  2001              MOVS     r0,#1
0000c4  6068              STR      r0,[r5,#4]
0000c6  bf00              NOP      
0000c8  e02e              B        |L1.296|
                  |L1.202|
;;;159      }
;;;160      else if (Channel == LL_DMA_CHANNEL_2)
0000ca  2c02              CMP      r4,#2
0000cc  d104              BNE      |L1.216|
;;;161      {
;;;162        /* Reset interrupt pending bits for DMAx Channel2 */
;;;163        LL_DMA_ClearFlag_GI2(DMAx);
0000ce  bf00              NOP      
0000d0  2010              MOVS     r0,#0x10
0000d2  6068              STR      r0,[r5,#4]
0000d4  bf00              NOP      
0000d6  e027              B        |L1.296|
                  |L1.216|
;;;164      }
;;;165      else if (Channel == LL_DMA_CHANNEL_3)
0000d8  2c03              CMP      r4,#3
0000da  d105              BNE      |L1.232|
;;;166      {
;;;167        /* Reset interrupt pending bits for DMAx Channel3 */
;;;168        LL_DMA_ClearFlag_GI3(DMAx);
0000dc  bf00              NOP      
0000de  f44f7080          MOV      r0,#0x100
0000e2  6068              STR      r0,[r5,#4]
0000e4  bf00              NOP      
0000e6  e01f              B        |L1.296|
                  |L1.232|
;;;169      }
;;;170      else if (Channel == LL_DMA_CHANNEL_4)
0000e8  2c04              CMP      r4,#4
0000ea  d104              BNE      |L1.246|
;;;171      {
;;;172        /* Reset interrupt pending bits for DMAx Channel4 */
;;;173        LL_DMA_ClearFlag_GI4(DMAx);
0000ec  bf00              NOP      
0000ee  02a0              LSLS     r0,r4,#10
0000f0  6068              STR      r0,[r5,#4]
0000f2  bf00              NOP      
0000f4  e018              B        |L1.296|
                  |L1.246|
;;;174      }
;;;175      else if (Channel == LL_DMA_CHANNEL_5)
0000f6  2c05              CMP      r4,#5
0000f8  d105              BNE      |L1.262|
;;;176      {
;;;177        /* Reset interrupt pending bits for DMAx Channel5 */
;;;178        LL_DMA_ClearFlag_GI5(DMAx);
0000fa  bf00              NOP      
0000fc  f44f3080          MOV      r0,#0x10000
000100  6068              STR      r0,[r5,#4]
000102  bf00              NOP      
000104  e010              B        |L1.296|
                  |L1.262|
;;;179      }
;;;180    
;;;181      else if (Channel == LL_DMA_CHANNEL_6)
000106  2c06              CMP      r4,#6
000108  d105              BNE      |L1.278|
;;;182      {
;;;183        /* Reset interrupt pending bits for DMAx Channel6 */
;;;184        LL_DMA_ClearFlag_GI6(DMAx);
00010a  bf00              NOP      
00010c  f44f1080          MOV      r0,#0x100000
000110  6068              STR      r0,[r5,#4]
000112  bf00              NOP      
000114  e008              B        |L1.296|
                  |L1.278|
;;;185      }
;;;186      else if (Channel == LL_DMA_CHANNEL_7)
000116  2c07              CMP      r4,#7
000118  d105              BNE      |L1.294|
;;;187      {
;;;188        /* Reset interrupt pending bits for DMAx Channel7 */
;;;189        LL_DMA_ClearFlag_GI7(DMAx);
00011a  bf00              NOP      
00011c  f04f7080          MOV      r0,#0x1000000
000120  6068              STR      r0,[r5,#4]
000122  bf00              NOP      
000124  e000              B        |L1.296|
                  |L1.294|
;;;190      }
;;;191      else
;;;192      {
;;;193        status = ERROR;
000126  2701              MOVS     r7,#1
                  |L1.296|
;;;194      }
;;;195    
;;;196      return status;
000128  4638              MOV      r0,r7
;;;197    }
00012a  e8bd81f0          POP      {r4-r8,pc}
;;;198    
                          ENDP

00012e  0000              DCW      0x0000
                  |L1.304|
                          DCD      0x40020008
                  |L1.308|
000134  2e2e2f44          DCB      "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_dma.c",0
000138  72697665
00013c  72732f53
000140  544d3332
000144  46317878
000148  5f48414c
00014c  5f447269
000150  7665722f
000154  5372632f
000158  73746d33
00015c  32663178
000160  785f6c6c
000164  5f646d61
000168  2e6300  
00016b  00                DCB      0

                          AREA ||i.LL_DMA_Init||, CODE, READONLY, ALIGN=2

                  LL_DMA_Init PROC
;;;217      */
;;;218    uint32_t LL_DMA_Init(DMA_TypeDef *DMAx, uint32_t Channel, LL_DMA_InitTypeDef *DMA_InitStruct)
000000  b570              PUSH     {r4-r6,lr}
;;;219    {
000002  4606              MOV      r6,r0
000004  460d              MOV      r5,r1
000006  4614              MOV      r4,r2
;;;220      /* Check the DMA Instance DMAx and Channel parameters*/
;;;221      assert_param(IS_LL_DMA_ALL_CHANNEL_INSTANCE(DMAx, Channel));
000008  4859              LDR      r0,|L2.368|
00000a  4286              CMP      r6,r0
00000c  d10e              BNE      |L2.44|
00000e  2d01              CMP      r5,#1
000010  d00b              BEQ      |L2.42|
000012  2d02              CMP      r5,#2
000014  d009              BEQ      |L2.42|
000016  2d03              CMP      r5,#3
000018  d007              BEQ      |L2.42|
00001a  2d04              CMP      r5,#4
00001c  d005              BEQ      |L2.42|
00001e  2d05              CMP      r5,#5
000020  d003              BEQ      |L2.42|
000022  2d06              CMP      r5,#6
000024  d001              BEQ      |L2.42|
000026  2d07              CMP      r5,#7
000028  d100              BNE      |L2.44|
                  |L2.42|
00002a  e003              B        |L2.52|
                  |L2.44|
00002c  21dd              MOVS     r1,#0xdd
00002e  a051              ADR      r0,|L2.372|
000030  f7fffffe          BL       assert_failed
                  |L2.52|
;;;222    
;;;223      /* Check the DMA parameters from DMA_InitStruct */
;;;224      assert_param(IS_LL_DMA_DIRECTION(DMA_InitStruct->Direction));
000034  68a0              LDR      r0,[r4,#8]
000036  b130              CBZ      r0,|L2.70|
000038  68a0              LDR      r0,[r4,#8]
00003a  2810              CMP      r0,#0x10
00003c  d003              BEQ      |L2.70|
00003e  68a0              LDR      r0,[r4,#8]
000040  f5b04f80          CMP      r0,#0x4000
000044  d100              BNE      |L2.72|
                  |L2.70|
000046  e003              B        |L2.80|
                  |L2.72|
000048  21e0              MOVS     r1,#0xe0
00004a  a04a              ADR      r0,|L2.372|
00004c  f7fffffe          BL       assert_failed
                  |L2.80|
;;;225      assert_param(IS_LL_DMA_MODE(DMA_InitStruct->Mode));
000050  68e0              LDR      r0,[r4,#0xc]
000052  b110              CBZ      r0,|L2.90|
000054  68e0              LDR      r0,[r4,#0xc]
000056  2820              CMP      r0,#0x20
000058  d100              BNE      |L2.92|
                  |L2.90|
00005a  e003              B        |L2.100|
                  |L2.92|
00005c  21e1              MOVS     r1,#0xe1
00005e  a045              ADR      r0,|L2.372|
000060  f7fffffe          BL       assert_failed
                  |L2.100|
;;;226      assert_param(IS_LL_DMA_PERIPHINCMODE(DMA_InitStruct->PeriphOrM2MSrcIncMode));
000064  6920              LDR      r0,[r4,#0x10]
000066  2840              CMP      r0,#0x40
000068  d001              BEQ      |L2.110|
00006a  6920              LDR      r0,[r4,#0x10]
00006c  b900              CBNZ     r0,|L2.112|
                  |L2.110|
00006e  e003              B        |L2.120|
                  |L2.112|
000070  21e2              MOVS     r1,#0xe2
000072  a040              ADR      r0,|L2.372|
000074  f7fffffe          BL       assert_failed
                  |L2.120|
;;;227      assert_param(IS_LL_DMA_MEMORYINCMODE(DMA_InitStruct->MemoryOrM2MDstIncMode));
000078  6960              LDR      r0,[r4,#0x14]
00007a  2880              CMP      r0,#0x80
00007c  d001              BEQ      |L2.130|
00007e  6960              LDR      r0,[r4,#0x14]
000080  b900              CBNZ     r0,|L2.132|
                  |L2.130|
000082  e003              B        |L2.140|
                  |L2.132|
000084  21e3              MOVS     r1,#0xe3
000086  a03b              ADR      r0,|L2.372|
000088  f7fffffe          BL       assert_failed
                  |L2.140|
;;;228      assert_param(IS_LL_DMA_PERIPHDATASIZE(DMA_InitStruct->PeriphOrM2MSrcDataSize));
00008c  69a0              LDR      r0,[r4,#0x18]
00008e  b138              CBZ      r0,|L2.160|
000090  69a0              LDR      r0,[r4,#0x18]
000092  f5b07f80          CMP      r0,#0x100
000096  d003              BEQ      |L2.160|
000098  69a0              LDR      r0,[r4,#0x18]
00009a  f5b07f00          CMP      r0,#0x200
00009e  d100              BNE      |L2.162|
                  |L2.160|
0000a0  e003              B        |L2.170|
                  |L2.162|
0000a2  21e4              MOVS     r1,#0xe4
0000a4  a033              ADR      r0,|L2.372|
0000a6  f7fffffe          BL       assert_failed
                  |L2.170|
;;;229      assert_param(IS_LL_DMA_MEMORYDATASIZE(DMA_InitStruct->MemoryOrM2MDstDataSize));
0000aa  69e0              LDR      r0,[r4,#0x1c]
0000ac  b138              CBZ      r0,|L2.190|
0000ae  69e0              LDR      r0,[r4,#0x1c]
0000b0  f5b06f80          CMP      r0,#0x400
0000b4  d003              BEQ      |L2.190|
0000b6  69e0              LDR      r0,[r4,#0x1c]
0000b8  f5b06f00          CMP      r0,#0x800
0000bc  d100              BNE      |L2.192|
                  |L2.190|
0000be  e003              B        |L2.200|
                  |L2.192|
0000c0  21e5              MOVS     r1,#0xe5
0000c2  a02c              ADR      r0,|L2.372|
0000c4  f7fffffe          BL       assert_failed
                  |L2.200|
;;;230      assert_param(IS_LL_DMA_NBDATA(DMA_InitStruct->NbData));
0000c8  6a20              LDR      r0,[r4,#0x20]
0000ca  f5b03f80          CMP      r0,#0x10000
0000ce  d200              BCS      |L2.210|
0000d0  e003              B        |L2.218|
                  |L2.210|
0000d2  21e6              MOVS     r1,#0xe6
0000d4  a027              ADR      r0,|L2.372|
0000d6  f7fffffe          BL       assert_failed
                  |L2.218|
;;;231      assert_param(IS_LL_DMA_PRIORITY(DMA_InitStruct->Priority));
0000da  6a60              LDR      r0,[r4,#0x24]
0000dc  b158              CBZ      r0,|L2.246|
0000de  6a60              LDR      r0,[r4,#0x24]
0000e0  f5b05f80          CMP      r0,#0x1000
0000e4  d007              BEQ      |L2.246|
0000e6  6a60              LDR      r0,[r4,#0x24]
0000e8  f5b05f00          CMP      r0,#0x2000
0000ec  d003              BEQ      |L2.246|
0000ee  6a60              LDR      r0,[r4,#0x24]
0000f0  f5b05f40          CMP      r0,#0x3000
0000f4  d100              BNE      |L2.248|
                  |L2.246|
0000f6  e003              B        |L2.256|
                  |L2.248|
0000f8  21e7              MOVS     r1,#0xe7
0000fa  a01e              ADR      r0,|L2.372|
0000fc  f7fffffe          BL       assert_failed
                  |L2.256|
;;;232    
;;;233      /*---------------------------- DMAx CCR Configuration ------------------------
;;;234       * Configure DMAx_Channely: data transfer direction, data transfer mode,
;;;235       *                          peripheral and memory increment mode,
;;;236       *                          data size alignment and  priority level with parameters :
;;;237       * - Direction:      DMA_CCR_DIR and DMA_CCR_MEM2MEM bits
;;;238       * - Mode:           DMA_CCR_CIRC bit
;;;239       * - PeriphOrM2MSrcIncMode:  DMA_CCR_PINC bit
;;;240       * - MemoryOrM2MDstIncMode:  DMA_CCR_MINC bit
;;;241       * - PeriphOrM2MSrcDataSize: DMA_CCR_PSIZE[1:0] bits
;;;242       * - MemoryOrM2MDstDataSize: DMA_CCR_MSIZE[1:0] bits
;;;243       * - Priority:               DMA_CCR_PL[1:0] bits
;;;244       */
;;;245      LL_DMA_ConfigTransfer(DMAx, Channel, DMA_InitStruct->Direction | \
000100  e9d41202          LDRD     r1,r2,[r4,#8]
000104  4311              ORRS     r1,r1,r2
000106  6922              LDR      r2,[r4,#0x10]
000108  4311              ORRS     r1,r1,r2
00010a  6962              LDR      r2,[r4,#0x14]
00010c  4311              ORRS     r1,r1,r2
00010e  69a2              LDR      r2,[r4,#0x18]
000110  4311              ORRS     r1,r1,r2
000112  69e2              LDR      r2,[r4,#0x1c]
000114  4311              ORRS     r1,r1,r2
000116  6a62              LDR      r2,[r4,#0x24]
000118  ea410002          ORR      r0,r1,r2
00011c  1e69              SUBS     r1,r5,#1
00011e  4a23              LDR      r2,|L2.428|
000120  5c51              LDRB     r1,[r2,r1]
000122  5871              LDR      r1,[r6,r1]
000124  f64772f0          MOV      r2,#0x7ff0
000128  4391              BICS     r1,r1,r2
00012a  4301              ORRS     r1,r1,r0
00012c  1e6a              SUBS     r2,r5,#1
00012e  4b1f              LDR      r3,|L2.428|
000130  5c9a              LDRB     r2,[r3,r2]
000132  50b1              STR      r1,[r6,r2]
000134  bf00              NOP      
;;;246                            DMA_InitStruct->Mode                   | \
;;;247                            DMA_InitStruct->PeriphOrM2MSrcIncMode  | \
;;;248                            DMA_InitStruct->MemoryOrM2MDstIncMode  | \
;;;249                            DMA_InitStruct->PeriphOrM2MSrcDataSize | \
;;;250                            DMA_InitStruct->MemoryOrM2MDstDataSize | \
;;;251                            DMA_InitStruct->Priority);
;;;252    
;;;253      /*-------------------------- DMAx CMAR Configuration -------------------------
;;;254       * Configure the memory or destination base address with parameter :
;;;255       * - MemoryOrM2MDstAddress: DMA_CMAR_MA[31:0] bits
;;;256       */
;;;257      LL_DMA_SetMemoryAddress(DMAx, Channel, DMA_InitStruct->MemoryOrM2MDstAddress);
000136  6860              LDR      r0,[r4,#4]
000138  1e69              SUBS     r1,r5,#1
00013a  461a              MOV      r2,r3
00013c  5c51              LDRB     r1,[r2,r1]
00013e  4431              ADD      r1,r1,r6
000140  60c8              STR      r0,[r1,#0xc]
000142  bf00              NOP      
;;;258    
;;;259      /*-------------------------- DMAx CPAR Configuration -------------------------
;;;260       * Configure the peripheral or source base address with parameter :
;;;261       * - PeriphOrM2MSrcAddress: DMA_CPAR_PA[31:0] bits
;;;262       */
;;;263      LL_DMA_SetPeriphAddress(DMAx, Channel, DMA_InitStruct->PeriphOrM2MSrcAddress);
000144  6820              LDR      r0,[r4,#0]
000146  1e69              SUBS     r1,r5,#1
000148  5c51              LDRB     r1,[r2,r1]
00014a  4431              ADD      r1,r1,r6
00014c  6088              STR      r0,[r1,#8]
00014e  bf00              NOP      
;;;264    
;;;265      /*--------------------------- DMAx CNDTR Configuration -----------------------
;;;266       * Configure the peripheral base address with parameter :
;;;267       * - NbData: DMA_CNDTR_NDT[15:0] bits
;;;268       */
;;;269      LL_DMA_SetDataLength(DMAx, Channel, DMA_InitStruct->NbData);
000150  6a20              LDR      r0,[r4,#0x20]
000152  1e69              SUBS     r1,r5,#1
000154  5c51              LDRB     r1,[r2,r1]
000156  4431              ADD      r1,r1,r6
000158  6849              LDR      r1,[r1,#4]
00015a  f36f010f          BFC      r1,#0,#16
00015e  4301              ORRS     r1,r1,r0
000160  1e6a              SUBS     r2,r5,#1
000162  5c9a              LDRB     r2,[r3,r2]
000164  4432              ADD      r2,r2,r6
000166  6051              STR      r1,[r2,#4]
000168  bf00              NOP      
;;;270    
;;;271      return SUCCESS;
00016a  2000              MOVS     r0,#0
;;;272    }
00016c  bd70              POP      {r4-r6,pc}
;;;273    
                          ENDP

00016e  0000              DCW      0x0000
                  |L2.368|
                          DCD      0x40020000
                  |L2.372|
000174  2e2e2f44          DCB      "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_dma.c",0
000178  72697665
00017c  72732f53
000180  544d3332
000184  46317878
000188  5f48414c
00018c  5f447269
000190  7665722f
000194  5372632f
000198  73746d33
00019c  32663178
0001a0  785f6c6c
0001a4  5f646d61
0001a8  2e6300  
0001ab  00                DCB      0
                  |L2.428|
                          DCD      CHANNEL_OFFSET_TAB

                          AREA ||i.LL_DMA_StructInit||, CODE, READONLY, ALIGN=1

                  LL_DMA_StructInit PROC
;;;278      */
;;;279    void LL_DMA_StructInit(LL_DMA_InitTypeDef *DMA_InitStruct)
000000  2100              MOVS     r1,#0
;;;280    {
;;;281      /* Set DMA_InitStruct fields to default values */
;;;282      DMA_InitStruct->PeriphOrM2MSrcAddress  = 0x00000000U;
000002  6001              STR      r1,[r0,#0]
;;;283      DMA_InitStruct->MemoryOrM2MDstAddress  = 0x00000000U;
000004  6041              STR      r1,[r0,#4]
;;;284      DMA_InitStruct->Direction              = LL_DMA_DIRECTION_PERIPH_TO_MEMORY;
000006  6081              STR      r1,[r0,#8]
;;;285      DMA_InitStruct->Mode                   = LL_DMA_MODE_NORMAL;
000008  60c1              STR      r1,[r0,#0xc]
;;;286      DMA_InitStruct->PeriphOrM2MSrcIncMode  = LL_DMA_PERIPH_NOINCREMENT;
00000a  6101              STR      r1,[r0,#0x10]
;;;287      DMA_InitStruct->MemoryOrM2MDstIncMode  = LL_DMA_MEMORY_NOINCREMENT;
00000c  6141              STR      r1,[r0,#0x14]
;;;288      DMA_InitStruct->PeriphOrM2MSrcDataSize = LL_DMA_PDATAALIGN_BYTE;
00000e  6181              STR      r1,[r0,#0x18]
;;;289      DMA_InitStruct->MemoryOrM2MDstDataSize = LL_DMA_MDATAALIGN_BYTE;
000010  61c1              STR      r1,[r0,#0x1c]
;;;290      DMA_InitStruct->NbData                 = 0x00000000U;
000012  6201              STR      r1,[r0,#0x20]
;;;291      DMA_InitStruct->Priority               = LL_DMA_PRIORITY_LOW;
000014  6241              STR      r1,[r0,#0x24]
;;;292    }
000016  4770              BX       lr
;;;293    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  CHANNEL_OFFSET_TAB
000000  081c3044          DCB      0x08,0x1c,0x30,0x44
000004  586c80            DCB      0x58,0x6c,0x80

;*** Start embedded assembler ***

#line 1 "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_ll_dma.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f1xx_ll_dma_c_fc5381f7____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___18_stm32f1xx_ll_dma_c_fc5381f7____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f1xx_ll_dma_c_fc5381f7____REVSH|
#line 478
|__asm___18_stm32f1xx_ll_dma_c_fc5381f7____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_stm32f1xx_ll_dma_c_fc5381f7____RRX|
#line 665
|__asm___18_stm32f1xx_ll_dma_c_fc5381f7____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
