; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -otemplate\ff_gen_drv.o --asm_dir=./ --list_dir=--list --depend=template\ff_gen_drv.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I../Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc -I../Drivers/STM32F1xx_HAL_Driver/Inc/Legacy -I../Middlewares/Third_Party/FatFs/src -I../Drivers/CMSIS/Device/ST/STM32F1xx/Include -I../Drivers/CMSIS/Include -I.\RTE\_Template -ID:\Keil_v5\Pack\ARM\CMSIS\5.7.0\CMSIS\Core\Include -ID:\Keil_v5\Pack\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=533 -D_RTE_ -DSTM32F10X_MD -D_RTE_ -DUSE_FULL_LL_DRIVER -DUSE_HAL_DRIVER -DSTM32F103xB --signed_chars --omf_browse=template\ff_gen_drv.crf ../Middlewares/Third_Party/FatFs/src/ff_gen_drv.c]
                          THUMB

                          AREA ||i.FATFS_GetAttachedDriversNbr||, CODE, READONLY, ALIGN=2

                  FATFS_GetAttachedDriversNbr PROC
;;;144      */
;;;145    uint8_t FATFS_GetAttachedDriversNbr(void)
000000  4801              LDR      r0,|L1.8|
;;;146    {
;;;147      return disk.nbr;
000002  7a40              LDRB     r0,[r0,#9]  ; disk
;;;148    }
000004  4770              BX       lr
;;;149     
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      disk

                          AREA ||i.FATFS_LinkDriver||, CODE, READONLY, ALIGN=1

                  FATFS_LinkDriver PROC
;;;96       */
;;;97     uint8_t FATFS_LinkDriver(Diskio_drvTypeDef *drv, char *path)
000000  b530              PUSH     {r4,r5,lr}
;;;98     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;99       return FATFS_LinkDriverEx(drv, path, 0);
000006  2200              MOVS     r2,#0
000008  4629              MOV      r1,r5
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       FATFS_LinkDriverEx
;;;100    }
000010  bd30              POP      {r4,r5,pc}
;;;101    
                          ENDP


                          AREA ||i.FATFS_LinkDriverEx||, CODE, READONLY, ALIGN=2

                  FATFS_LinkDriverEx PROC
;;;67       */
;;;68     uint8_t FATFS_LinkDriverEx(Diskio_drvTypeDef *drv, char *path, uint8_t lun)
000000  b5f0              PUSH     {r4-r7,lr}
;;;69     {
000002  4603              MOV      r3,r0
;;;70       uint8_t ret = 1;
000004  2501              MOVS     r5,#1
;;;71       uint8_t DiskNum = 0;
000006  2400              MOVS     r4,#0
;;;72       
;;;73       if(disk.nbr <= _VOLUMES)
000008  4811              LDR      r0,|L3.80|
00000a  7a40              LDRB     r0,[r0,#9]  ; disk
00000c  2801              CMP      r0,#1
00000e  dc1d              BGT      |L3.76|
;;;74       {
;;;75         disk.is_initialized[disk.nbr] = 0;
000010  2000              MOVS     r0,#0
000012  4e0f              LDR      r6,|L3.80|
000014  7a76              LDRB     r6,[r6,#9]  ; disk
000016  4f0e              LDR      r7,|L3.80|
000018  55b8              STRB     r0,[r7,r6]
;;;76         disk.drv[disk.nbr] = drv;  
00001a  4638              MOV      r0,r7
00001c  7a46              LDRB     r6,[r0,#9]  ; disk
00001e  1d00              ADDS     r0,r0,#4
000020  f8403026          STR      r3,[r0,r6,LSL #2]
;;;77         disk.lun[disk.nbr] = lun;  
000024  1f00              SUBS     r0,r0,#4
000026  7a46              LDRB     r6,[r0,#9]  ; disk
000028  3008              ADDS     r0,r0,#8
00002a  5582              STRB     r2,[r0,r6]
;;;78         DiskNum = disk.nbr++;
00002c  463e              MOV      r6,r7
00002e  7a70              LDRB     r0,[r6,#9]  ; disk
000030  1c46              ADDS     r6,r0,#1
000032  727e              STRB     r6,[r7,#9]
000034  4604              MOV      r4,r0
;;;79         path[0] = DiskNum + '0';
000036  f1040030          ADD      r0,r4,#0x30
00003a  b240              SXTB     r0,r0
00003c  7008              STRB     r0,[r1,#0]
;;;80         path[1] = ':';
00003e  203a              MOVS     r0,#0x3a
000040  7048              STRB     r0,[r1,#1]
;;;81         path[2] = '/';
000042  202f              MOVS     r0,#0x2f
000044  7088              STRB     r0,[r1,#2]
;;;82         path[3] = 0;
000046  2000              MOVS     r0,#0
000048  70c8              STRB     r0,[r1,#3]
;;;83         ret = 0;
00004a  2500              MOVS     r5,#0
                  |L3.76|
;;;84       }
;;;85       
;;;86       return ret;
00004c  4628              MOV      r0,r5
;;;87     }
00004e  bdf0              POP      {r4-r7,pc}
;;;88     
                          ENDP

                  |L3.80|
                          DCD      disk

                          AREA ||i.FATFS_UnLinkDriver||, CODE, READONLY, ALIGN=1

                  FATFS_UnLinkDriver PROC
;;;134      */
;;;135    uint8_t FATFS_UnLinkDriver(char *path)
000000  b510              PUSH     {r4,lr}
;;;136    { 
000002  4604              MOV      r4,r0
;;;137      return FATFS_UnLinkDriverEx(path, 0);
000004  2100              MOVS     r1,#0
000006  4620              MOV      r0,r4
000008  f7fffffe          BL       FATFS_UnLinkDriverEx
;;;138    }
00000c  bd10              POP      {r4,pc}
;;;139    
                          ENDP


                          AREA ||i.FATFS_UnLinkDriverEx||, CODE, READONLY, ALIGN=2

                  FATFS_UnLinkDriverEx PROC
;;;108      */
;;;109    uint8_t FATFS_UnLinkDriverEx(char *path, uint8_t lun)
000000  b530              PUSH     {r4,r5,lr}
;;;110    { 
000002  4602              MOV      r2,r0
000004  460b              MOV      r3,r1
;;;111      uint8_t DiskNum = 0;
000006  2100              MOVS     r1,#0
;;;112      uint8_t ret = 1;
000008  2001              MOVS     r0,#1
;;;113      
;;;114      if(disk.nbr >= 1)
00000a  4c0d              LDR      r4,|L5.64|
00000c  7a64              LDRB     r4,[r4,#9]  ; disk
00000e  2c01              CMP      r4,#1
000010  db14              BLT      |L5.60|
;;;115      {    
;;;116        DiskNum = path[0] - '0';
000012  7814              LDRB     r4,[r2,#0]
000014  3c30              SUBS     r4,r4,#0x30
000016  b2e1              UXTB     r1,r4
;;;117        if(disk.drv[DiskNum] != 0)
000018  4c09              LDR      r4,|L5.64|
00001a  1d24              ADDS     r4,r4,#4
00001c  f8544021          LDR      r4,[r4,r1,LSL #2]
000020  b164              CBZ      r4,|L5.60|
;;;118        {
;;;119          disk.drv[DiskNum] = 0;
000022  2500              MOVS     r5,#0
000024  4c06              LDR      r4,|L5.64|
000026  1d24              ADDS     r4,r4,#4
000028  f8445021          STR      r5,[r4,r1,LSL #2]
;;;120          disk.lun[DiskNum] = 0;
00002c  1d24              ADDS     r4,r4,#4
00002e  5465              STRB     r5,[r4,r1]
;;;121          disk.nbr--;
000030  3c08              SUBS     r4,r4,#8
000032  7a64              LDRB     r4,[r4,#9]  ; disk
000034  1e64              SUBS     r4,r4,#1
000036  4d02              LDR      r5,|L5.64|
000038  726c              STRB     r4,[r5,#9]
;;;122          ret = 0;
00003a  2000              MOVS     r0,#0
                  |L5.60|
;;;123        }
;;;124      }
;;;125      
;;;126      return ret;
;;;127    }
00003c  bd30              POP      {r4,r5,pc}
;;;128    
                          ENDP

00003e  0000              DCW      0x0000
                  |L5.64|
                          DCD      disk

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  disk
                          %        12

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  CHANNEL_OFFSET_TAB
000000  081c3044          DCB      0x08,0x1c,0x30,0x44
000004  586c80            DCB      0x58,0x6c,0x80

;*** Start embedded assembler ***

#line 1 "../Middlewares/Third_Party/FatFs/src/ff_gen_drv.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_ff_gen_drv_c_disk____REV16|
#line 463 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___12_ff_gen_drv_c_disk____REV16| PROC
#line 464

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_ff_gen_drv_c_disk____REVSH|
#line 478
|__asm___12_ff_gen_drv_c_disk____REVSH| PROC
#line 479

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___12_ff_gen_drv_c_disk____RRX|
#line 665
|__asm___12_ff_gen_drv_c_disk____RRX| PROC
#line 666

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
